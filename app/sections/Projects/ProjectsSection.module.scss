// sections/ProjectsSection/ProjectsSection.module.scss (Updated styles for overlay design)
@use '../../styles/spacings' as spacings;
@use '../../styles/mixins' as *;

// Section styles
.projectsSection {
  padding: spacings.spacing(xxxl) 0;

  @include breakpoint(md) {
    padding: spacings.spacing(xxxl) 0;
  }
}

// Section heading with animation
.sectionHeading {
  display: flex;
  align-items: center;
  margin-block-end: spacings.spacing(xl);
  opacity: 0;
  transform: translateY(20px);
  transition:
    opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1),
    transform 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);

  &.animate {
    opacity: 1;
    transform: translateY(0);
  }
}

.heading {
  margin-block-end: 0;
  font-size: clamp(1.5rem, 5vw, 2rem);
  white-space: nowrap;
}

.sectionNumber {
  margin-inline-end: spacings.spacing(sm);
  font-family: var(--font-geist-sans);
  font-weight: 400;
  color: var(--color-accent);
}

.headingLine {
  flex-grow: 1;
  block-size: 1px;
  margin-inline-start: spacings.spacing(md);
  background-color: var(--color-border);
}

// Project filters
.projectFilters {
  margin-block-end: spacings.spacing(xl);
  text-align: center;
}

.filtersList {
  display: inline-flex;
  flex-wrap: wrap;
  gap: spacings.spacing(sm);
  justify-content: center;
  padding: 0;
  margin: 0;
  list-style: none;
}

.filterButton {
  padding: spacings.spacing(xs) spacings.spacing(md);
  font-family: var(--font-manrope);
  font-size: 0.9rem;
  color: var(--color-text-secondary);
  cursor: pointer;
  background-color: transparent;
  border: 1px solid var(--color-border);
  border-radius: 20px;

  @include transition;

  &:hover {
    color: var(--color-accent);
    background-color: rgb(100 255 218 / 5%);
    border-color: var(--color-accent);
    transform: translateY(-2px);
  }

  &.activeFilter {
    color: var(--color-background);
    background-color: var(--color-accent);
    border-color: var(--color-accent);
  }
}

// View more projects container
.viewMoreContainer {
  display: flex;
  justify-content: center;
  margin-block-start: spacings.spacing(xl);
}

// View more link
.viewMoreLink {
  display: inline-flex;
  gap: spacings.spacing(xs);
  align-items: center;
  padding: spacings.spacing(sm) spacings.spacing(lg);
  font-size: 0.9rem;
  color: var(--color-accent);
  text-decoration: none;
  background-color: transparent;
  border: 1px solid var(--color-accent);
  border-radius: 4px;

  @include transition;

  &:hover {
    background-color: rgb(100 255 218 / 10%);
    transform: translateY(-2px);
  }
}

// Empty state when no projects match the filter
.emptyState {
  display: flex;
  flex-direction: column;
  gap: spacings.spacing(md);
  align-items: center;
  padding: spacings.spacing(xl);
  text-align: center;
}

// Reset button for empty state
.resetButton {
  padding: spacings.spacing(sm) spacings.spacing(lg);
  font-size: 0.9rem;
  color: var(--color-accent);
  cursor: pointer;
  background-color: transparent;
  border: 1px solid var(--color-accent);
  border-radius: 4px;

  @include transition;

  &:hover {
    background-color: rgb(100 255 218 / 10%);
  }
}

// Section-wide disclaimer
.sectionDisclaimer {
  max-inline-size: 800px;
  padding: spacings.spacing(md);
  margin-block-start: spacings.spacing(xl);
  margin-inline: auto;
  font-size: 0.75rem;
  line-height: 1.6;
  color: var(--color-text-secondary);
  text-align: center;
  background-color: rgb(138 146 176 / 5%);
  border: 1px solid var(--color-border);
  border-radius: 8px;
  opacity: 0;
  transform: translateY(10px);
  transition:
    opacity 0.5s ease,
    transform 0.5s ease;

  h4 {
    margin-block-end: spacings.spacing(sm);
    font-size: 0.85rem;
    color: var(--color-text-primary);
  }

  &.animate {
    opacity: 1;
    transform: translateY(0);
  }
}

// featured projects section (larger cards)
.featuredProjects {
  display: grid;
  grid-template-columns: 1fr;
  gap: spacings.spacing(xl);
  margin-block-end: spacings.spacing(xxxl);

  @include breakpoint(md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include breakpoint(lg) {
    grid-template-columns: repeat(2, 1fr);
  }
}

// Regular projects grid
.projectsGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: spacings.spacing(lg);
  margin-block-end: spacings.spacing(xl);

  @include breakpoint(sm) {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }

  @include breakpoint(md) {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  }

  @include breakpoint(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
}

// Section styles remain the same...

// Base project card styles with initial state
.projectCard {
  position: relative;
  display: flex;
  flex-direction: column;

  // block-size: 380px; // Increased height for better video display
  overflow: hidden;
  background-color: var(--color-card-background);
  border-radius: 8px;
  box-shadow: 0 10px 30px -15px rgb(0 0 0 / 20%);
  opacity: 0;
  transform: translateY(20px);
  transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
  transition-duration: 0.4s;

  // Only apply transition delay to the initial animation, not to hover
  transition-property: opacity, transform;

  &.animate {
    opacity: 1;
    transform: translateY(0);
  }
}

.videoDisclaimerContainer {
  position: absolute;
  inset-block-start: 0;
  inset-inline-end: 0;
  display: flex;
  gap: 4px;
  align-items: center;
  padding: 4px 8px;
  font-size: 10px;
  opacity: 0;
  transition: opacity 0.3s ease;

  @include transition;

  &.active {
    opacity: 1;
  }
}

// Video disclaimer
.videoDisclaimer {
  z-index: 2;
  padding: 4px 8px;
  overflow: hidden;

  // font-size: 10px;
  color: rgb(255 255 255 / 80%);
  background-color: rgb(0 0 0 / 70%);
  border-radius: 4px;
  opacity: 0;
  transform: translateX(100%);

  &.active {
    animation: disclaimer-slide 5s forwards;
  }
}

.videoDisclaimerIBtn {
  z-index: 3;
  inline-size: 1.2rem;
  block-size: 1.2rem;
  padding: 0;
  margin: 0;
  font-size: 0.8rem;
  font-weight: 700;
  line-height: 1rem;
  color: rgb(0 0 0 / 70%);
  background-color: rgb(255 255 255 / 80%);
  border: none;
  border-radius: 50%;
}

// Content container
.projectCardContent {
  padding: spacings.spacing(lg);
  transform: translateY(10px);
  transition: transform 0.3s ease;

  .projectCard:hover & {
    transform: translateY(0);
  }
}

// Card image/video styling
.cardImage,
.cardVideo {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;

  // filter: grayscale(80%) brightness(0.7) contrast(1);
  @include transition;
}

// Separate hover transitions with no delay
.projectCard:hover {
  box-shadow: 0 20px 30px -15px rgb(0 0 0 / 30%);
  transform: translateY(-8px);

  // Immediate transition for hover, no delay
  transition:
    /* stylelint-disable-next-line plugin/no-low-performance-animation-properties */
    box-shadow 0.3s ease,
    transform 0.3s ease;

  .cardImage,
  .cardVideo {
    // filter: grayscale(0) brightness(0.7) contrast(1.1);
    transform: scale(1.05);
    transition:
      filter 0.3s ease,
      transform 0.3s ease; // No delay on hover
  }

  .videoDisclaimerContainer {
    opacity: 1;
    transition: opacity 0.3s ease; // No delay on hover
  }
}

// Media container (video/image) - Takes up entire card
.projectCardMedia {
  position: absolute;
  inset: 0;
  z-index: 1;
  inline-size: 100%;
  block-size: 100%;
}

// Overlay that contains the content
.projectCardOverlay {
  position: relative;
  inset: 0;
  z-index: 2;
  display: flex;
  flex-direction: column;
  justify-content: flex-end; // Align content to bottom
  inline-size: 100%;
  block-size: 100%;
  padding-block-start: 33%;
  overflow: hidden;
  background: linear-gradient(
    to top,
    rgb(10 25 47 / 90%) 0%,
    /* Solid at bottom for text readability */ rgb(10 25 47 / 60%) 30%,
    /* More transparent in middle */ rgb(10 25 47 / 20%) 60%,
    /* Very light in upper area */ rgb(10 25 47 / 10%) 100% /* Almost transparent at top */
  );

  // transform: translateY(100%);

  // opacity: 0;
  @include transition;

  &.active {
    // transform: translateY(0);
  }

  // Always visible on mobile
  @media (hover: none) {
    background: linear-gradient(
      to top,
      rgb(10 25 47 / 95%) 0%,
      rgb(10 25 47 / 80%) 40%,
      rgb(10 25 47 / 20%) 100%
    );
    opacity: 1;
  }
}

// Video container
.videoContainer {
  position: relative;
  inline-size: 100%;
  block-size: 100%;
}

// Card header
.projectCardHeader {
  margin-block-end: spacings.spacing(md);
}

// Featured badge
.featuredBadge {
  display: inline-block;
  padding: spacings.spacing(xs) spacings.spacing(sm);
  margin-block-end: spacings.spacing(sm);
  font-size: 0.7rem;
  font-weight: 600;
  color: var(--color-accent);
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: rgb(100 255 218 / 10%);
  border-radius: 4px;
}

// Card title
.projectCardTitle {
  margin-block-end: spacings.spacing(xs);
  font-size: 1.25rem;
  color: var(--color-text-primary);

  @include transition;
}

// Company name
.projectCardCompany {
  font-size: 0.9rem;
  color: var(--color-accent);

  @include transition;
}

// Card description
.projectCardDescription {
  max-block-size: 200px;
  margin-block-end: spacings.spacing(lg);
  overflow: hidden;

  @include transition;

  &.active {
    max-block-size: 0;
    margin-block-end: 0;
  }

  p {
    margin-block-end: 0;
    font-size: 0.9rem;
    line-height: 1.6;
    color: var(--color-text-secondary);
  }
}

// Card footer
.projectCardFooter {
  display: flex;
  flex-direction: column;
  gap: spacings.spacing(md);

  &:has(.projectCardTechList.active) {
    gap: 0;
  }
}

// Tech list
.projectCardTechList {
  display: flex;
  flex-wrap: wrap;
  gap: spacings.spacing(sm);
  max-block-size: 100px;
  padding: 0;
  margin: 0;
  overflow: hidden;

  @include transition;

  list-style: none;

  &.active {
    max-block-size: 0;
  }
}

// Tech item
.projectCardTechItem {
  padding: spacings.spacing(xs) spacings.spacing(sm);
  font-family: var(--font-manrope);
  font-size: 0.75rem;
  color: var(--color-text-secondary);
  background-color: rgb(138 146 176 / 20%);
  border-radius: 16px;

  @include transition;
}

// External links container
.projectCardLinks {
  display: flex;
  gap: spacings.spacing(md);
  align-items: center;
}

// External link
.projectCardLink {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-text-secondary);

  @include transition;

  &:hover {
    color: var(--color-accent);
    transform: translateY(-3px);
  }
}

// Featured cards are slightly larger
.featuredCard {
  // block-size: 450px;

  @include breakpoint(md) {
    grid-column: span 1;
  }

  .projectCardTitle {
    font-size: 1.5rem;

    @include breakpoint(md) {
      font-size: 1.75rem;
    }
  }

  .projectCardDescription p {
    font-size: 1rem;

    @include breakpoint(md) {
      font-size: 1.05rem;
    }
  }
}

// Animation delays ONLY for initial loading, not for hover interactions
@for $i from 1 through 12 {
  .projectCard:not(:hover):nth-child(#{$i}) {
    transition-delay: #{$i * 0.1}s;
  }
}

@keyframes disclaimer-slide {
  0% {
    // max-inline-size: 0;
    opacity: 0;
    transform: translateX(100%);
  }

  20%,
  80% {
    // max-inline-size: 300px;
    opacity: 1;
    transform: translateX(0);
  }

  100% {
    // max-inline-size: 0;
    opacity: 0;
    transform: translateX(100%);
  }
}

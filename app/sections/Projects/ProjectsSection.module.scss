// sections/ProjectsSection/ProjectsSection.module.scss
@use '../../styles/spacings' as spacings;
@use '../../styles/mixins' as *;

// Section styles
.projectsSection {
  padding: spacings.spacing(xxxl) 0;

  @include breakpoint(md) {
    padding: spacings.spacing(xxxl) 0;
  }
}

// Section heading with animation
.sectionHeading {
  display: flex;
  align-items: center;
  margin-block-end: spacings.spacing(xl);
  opacity: 0;
  transform: translateY(20px);
  transition:
    opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1),
    transform 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);

  &.animate {
    opacity: 1;
    transform: translateY(0);
  }
}

.heading {
  margin-block-end: 0;
  font-size: clamp(1.5rem, 5vw, 2rem);
  white-space: nowrap;
}

.sectionNumber {
  margin-inline-end: spacings.spacing(sm);
  font-family: var(--font-geist-sans);
  font-weight: 400;
  color: var(--color-accent);
}

.headingLine {
  flex-grow: 1;
  block-size: 1px;
  margin-inline-start: spacings.spacing(md);
  background-color: var(--color-border);
}

// Project filters
.projectFilters {
  margin-block-end: spacings.spacing(xl);
  text-align: center;
}

.filtersList {
  display: inline-flex;
  flex-wrap: wrap;
  gap: spacings.spacing(sm);
  justify-content: center;
  padding: 0;
  margin: 0;
  list-style: none;
}

.filterButton {
  padding: spacings.spacing(xs) spacings.spacing(md);
  font-family: var(--font-manrope);
  font-size: 0.9rem;
  color: var(--color-text-secondary);
  cursor: pointer;
  background-color: transparent;
  border: 1px solid var(--color-border);
  border-radius: 20px;

  @include transition;

  &:hover {
    color: var(--color-accent);
    background-color: rgb(100 255 218 / 5%);
    border-color: var(--color-accent);
    transform: translateY(-2px);
  }

  &.activeFilter {
    color: var(--color-background);
    background-color: var(--color-accent);
    border-color: var(--color-accent);
  }
}

// Featured projects section (larger cards)
.featuredProjects {
  display: grid;
  grid-template-columns: 1fr;
  gap: spacings.spacing(xl);
  margin-block-end: spacings.spacing(xxxl);

  @include breakpoint(md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include breakpoint(lg) {
    grid-template-columns: repeat(2, 1fr);
  }
}

// Regular projects grid
.projectsGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: spacings.spacing(lg);
  margin-block-end: spacings.spacing(xl);

  @include breakpoint(sm) {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }

  @include breakpoint(md) {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  }

  @include breakpoint(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
}

// Card image
.cardImage {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
  filter: grayscale(80%) contrast(1);

  @include transition;
}

// Image overlay
.cardImageOverlay {
  position: absolute;
  inset-block-start: 0;
  inset-inline-start: 0;
  inline-size: 100%;
  block-size: 100%;
  background-color: var(--color-primary-dark);
  opacity: 0.7;
  transition: opacity 0.4s ease;
}

// Card title
.projectCardTitle {
  margin-block-end: spacings.spacing(xs);
  font-size: 1.25rem;
  color: var(--color-text-primary);

  @include transition(color);
}

// Card description
.projectCardDescription {
  margin-block-end: spacings.spacing(lg);

  p {
    margin-block-end: 0;
    font-size: 0.9rem;
    line-height: 1.6;
    color: var(--color-text-secondary);
  }
}

// Project card styling
.projectCard {
  position: relative;
  display: flex;
  flex-direction: column;
  block-size: 100%;
  overflow: hidden;
  background-color: var(--color-card-background);
  border-block-start: 4px solid var(--color-accent);
  border-radius: 8px;
  box-shadow: 0 10px 30px -15px rgb(0 0 0 / 20%);
  opacity: 0;
  transform: translateY(20px);

  @include transition(all, 0.3s, cubic-bezier(0.645, 0.045, 0.355, 1));

  &.animate {
    opacity: 1;
    transform: translateY(0);
  }

  &:hover {
    box-shadow: 0 20px 30px -15px rgb(0 0 0 / 30%);
    transform: translateY(-8px);

    .cardImageOverlay {
      opacity: 0.2;
    }

    .cardImage {
      filter: grayscale(0) contrast(1.1);
      transform: scale(1.05);
    }

    .projectCardTitle {
      color: var(--color-accent);
    }
  }

  // Additional styles for featured cards
  &.featuredCard {
    @include breakpoint(md) {
      grid-column: span 1;
    }

    .projectCardTitle {
      font-size: 1.5rem;

      @include breakpoint(md) {
        font-size: 1.75rem;
      }
    }

    .projectCardDescription p {
      font-size: 1rem;

      @include breakpoint(md) {
        font-size: 1.05rem;
      }
    }
  }
}

// Card image container
.projectCardImage {
  position: relative;
  inline-size: 100%;
  block-size: 200px;
  overflow: hidden;
}

// Card video
.cardVideo {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
  filter: grayscale(80%) contrast(1);

  @include transition;

  .projectCard:hover & {
    filter: grayscale(0) contrast(1.1);
  }
}

// Section-wide disclaimer
.sectionDisclaimer {
  max-inline-size: 800px;
  padding: spacings.spacing(md);
  margin-block-start: spacings.spacing(xl);
  margin-inline: auto;
  font-size: 0.75rem;
  line-height: 1.6;
  color: var(--color-text-secondary);
  text-align: center;
  background-color: rgb(138 146 176 / 5%);
  border: 1px solid var(--color-border);
  border-radius: 8px;
  opacity: 0;
  transform: translateY(10px);
  transition:
    opacity 0.5s ease,
    transform 0.5s ease;

  h4 {
    margin-block-end: spacings.spacing(sm);
    font-size: 0.85rem;
    color: var(--color-text-primary);
  }

  &.animate {
    opacity: 1;
    transform: translateY(0);
  }
}

// Card content container
.projectCardContent {
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: spacings.spacing(lg);
}

// Card header
.projectCardHeader {
  margin-block-end: spacings.spacing(md);
}

// Featured badge
.featuredBadge {
  display: inline-block;
  padding: spacings.spacing(xs) spacings.spacing(sm);
  margin-block-end: spacings.spacing(sm);
  font-size: 0.7rem;
  font-weight: 600;
  color: var(--color-accent);
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: rgb(100 255 218 / 10%);
  border-radius: 4px;
}

// Company name
.projectCardCompany {
  font-size: 0.9rem;
  color: var(--color-accent);

  @include transition;
}

// Card footer
.projectCardFooter {
  display: flex;
  flex-direction: column;
  gap: spacings.spacing(md);
  margin-block-start: auto;
}

// Tech list
.projectCardTechList {
  display: flex;
  flex-wrap: wrap;
  gap: spacings.spacing(sm);
  padding: 0;
  margin: 0;
  list-style: none;
}

// Tech item
.projectCardTechItem {
  padding: spacings.spacing(xs) spacings.spacing(sm);
  font-family: var(--font-manrope);
  font-size: 0.75rem;
  color: var(--color-text-secondary);
  background-color: rgb(138 146 176 / 10%);
  border-radius: 16px;

  @include transition;

  .projectCard:hover & {
    opacity: 1;
    transform: translateY(0);
  }
}

// External links container
.projectCardLinks {
  display: flex;
  gap: spacings.spacing(md);
  align-items: center;
}

// External link
.projectCardLink {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-text-secondary);

  @include transition;

  &:hover {
    color: var(--color-accent);
    transform: translateY(-3px);
  }
}

// View more projects container
.viewMoreContainer {
  display: flex;
  justify-content: center;
  margin-block-start: spacings.spacing(xl);
}

// View more link
.viewMoreLink {
  display: inline-flex;
  gap: spacings.spacing(xs);
  align-items: center;
  padding: spacings.spacing(sm) spacings.spacing(lg);
  font-size: 0.9rem;
  color: var(--color-accent);
  text-decoration: none;
  background-color: transparent;
  border: 1px solid var(--color-accent);
  border-radius: 4px;

  @include transition;

  &:hover {
    background-color: rgb(100 255 218 / 10%);
    transform: translateY(-2px);
  }
}

// Empty state when no projects match the filter
.emptyState {
  display: flex;
  flex-direction: column;
  gap: spacings.spacing(md);
  align-items: center;
  padding: spacings.spacing(xl);
  text-align: center;
}

// Reset button for empty state
.resetButton {
  padding: spacings.spacing(sm) spacings.spacing(lg);
  font-size: 0.9rem;
  color: var(--color-accent);
  cursor: pointer;
  background-color: transparent;
  border: 1px solid var(--color-accent);
  border-radius: 4px;

  @include transition;

  &:hover {
    background-color: rgb(100 255 218 / 10%);
  }
}
